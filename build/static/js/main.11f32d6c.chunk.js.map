{"version":3,"sources":["components/Search.js","components/Form.js","components/Directory.js","services/contacts.js","App.js","index.js"],"names":["Search","newSearch","handler","value","onChange","Form","addPerson","nameHandler","numberHandler","newName","newNumber","onSubmit","type","Directory","persons","removePerson","length","filter","person","name","toLowerCase","includes","map","key","number","onClick","id","baseUrl","axios","get","newObject","post","put","delete","Notification","errorMessage","successMessage","className","App","useState","setPersons","setNewName","setNewNumber","setNewSearch","setErrorMessage","setSuccessMessage","useEffect","contactService","then","response","JSON","stringify","data","event","target","preventDefault","personToAdd","indexOf","concat","setTimeout","window","confirm","find","p","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11f32d6c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Search = ({newSearch, handler}) => {\n    return (\n      <div>\n        Search by Name\n        <input value={newSearch} onChange={handler}/>\n    </div>\n    )\n  }\n\nexport default Search","import React from 'react'\n\nconst Form = ({addPerson, nameHandler, numberHandler, newName, newNumber}) => {\n    return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={nameHandler}/>\n        <br/>\n        number: <input value={newNumber} onChange={numberHandler}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n    )\n  }\n\nexport default Form","import React from 'react'\n\nconst Directory = ({persons, newSearch, removePerson}) => {\n\n    const toDisplay = () => {\n      if (newSearch.length === 0){\n        return (persons)\n      } else {\n        let filtered = persons\n          .filter( person => \n            person.name.toLowerCase()\n            .includes(newSearch.toLowerCase()))\n            \n        return(filtered)\n      }\n    }\n  \n    return(\n      <table>\n        <tbody>\n          {toDisplay()\n            .map(person=> \n              <tr key={person.name}>\n                <td>{person.name}</td>\n                <td>{person.number}</td>\n                <td><button onClick={() => removePerson(person.id)}>Remove</button></td>\n              </tr>)}\n        </tbody>\n      </table>\n    )\n  }\n\nexport default Directory","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\n\nconst getAll = () => {\n    return(axios.get(baseUrl))\n  }\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst remove = id => {\n    return (axios\n        .delete(`${baseUrl}/${id}`))\n}\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nexport default {\n    getAll,\n    create,\n    update,\n    remove\n}","import React, { useState, useEffect } from 'react'\nimport Search from './components/Search'\nimport Form from './components/Form'\nimport Directory from './components/Directory'\nimport contactService from './services/contacts'\n\nconst Notification = ({ errorMessage, successMessage }) => {\n  if (errorMessage === null && successMessage === null) {\n    return null\n  }\n\n  if (errorMessage !== null){\n    return(\n      <div className=\"error\">\n        {errorMessage}\n      </div>\n    )\n  }\n\n  if (successMessage !== null){\n    return(\n      <div className=\"success\">\n        {successMessage}\n      </div>\n    )\n  }\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newSearch, setNewSearch] = useState('')\n  const [ errorMessage, setErrorMessage] = useState(null)\n  const [ successMessage, setSuccessMessage] = useState(null)\n\n  useEffect(() => {\n    contactService\n      .getAll()\n      .then(response => {\n        if(JSON.stringify(response.data) !== JSON.stringify(persons)){\n                    setPersons(response.data)\n        }\n      })\n  }, [persons])\n\n\n  const handleNameInput = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberInput = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchInput = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n\n  const removePerson = (id) => {\n    const person = persons.find(person => person.id === id)\n    if (window.confirm(`Delete ${person.name}?`) === true){\n     contactService\n      .remove(id)\n      .then(contactService\n            .getAll()\n            .then(response => {\n              setPersons(response.data)\n              setSuccessMessage(`${person.name} has been removed!`)\n              setTimeout(() => {\n                setSuccessMessage(null)\n              }, 5000)\n            }))\n      .catch(error => {\n        setErrorMessage(`${person.name} has already been removed from the directory!`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const personToAdd = {\n      name: newName,\n      number: newNumber\n    }\n\n    const checkExists = () => {\n      let check = persons.filter(person => 0 === person.name.toLowerCase().indexOf(newName.toLowerCase()))\n      return(check.length === 0)\n    }\n\n    if (checkExists()){\n      contactService\n        .create(personToAdd)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setSuccessMessage(`${newName} has been added!`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        })\n    } else {\n      if(window.confirm(`${newName} is already in the directory, would you like to replace the old number with a new one?`) === true){\n        let person = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n        person.number = newNumber\n\n        contactService\n          .update(person.id, person)\n          .then(response => {\n            setPersons(persons.map(p => p.id !== person.id ? p : response.data))\n            setSuccessMessage(`${newName}'s number has been modified!`)\n            setTimeout(() => {\n              setSuccessMessage(null)\n            }, 5000)\n          }\n        )\n      }\n    }\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Search newSearch={newSearch} handler={handleSearchInput}/>\n      <h2>Add A Number</h2>\n      <Form addPerson={addPerson} newName={newName} newNumber={newNumber} nameHandler={handleNameInput} numberHandler={handleNumberInput}/>\n      <Notification successMessage={successMessage} errorMessage={errorMessage}/>\n      <h2>Phone Directory</h2>\n      <Directory persons={persons} newSearch={newSearch} removePerson={removePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}